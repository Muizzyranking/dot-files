# Hack to remove weird string of characters on startup
set -sg escape-time 50

# default-shell 
set-option -g default-shell /bin/zsh

# change prefix to C-Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Set true colors
set-option -sa terminal-features ",xterm*:Tc" 
set -g default-terminal "tmux-256color"
set -sa terminal-features ",xterm*:RGB,xterm-kitty:RGB"
# set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g focus-events on

set-option -g xterm-keys on
set-window-option -g xterm-keys on
# set -g extended-keys on

# allow c-cr in nvim
bind-key -n C-Enter send-keys Escape "[13;5u"

#allows mouse in tmux
set -g mouse on

#move status bar to top
set -g status-position top

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# renumber windiws when a window is removed
set-option -g renumber-windows on

#prefix r to reload tmux config
# NOTE: prefix R reloads instead or prefix r, don't know why
unbind r
bind r source ~/.config/tmux/tmux.conf

# synchronize panes to run same commands
bind S set-window-option synchronize-panes \; display-message "Sync panes toggled."

# Split windows vertically 
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# Split windows horizontally
bind - split-window -v -c "#{pane_current_path}"

# kill pane without confirmation
bind x kill-pane

# kill window without confirmation
bind X kill-window

# kill other window
bind o kill-window -a

#vim like pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Navigate panes using Alt + hjkl without prefix
bind -n M-H select-pane -L  # Move left
bind -n M-J select-pane -D  # Move down
bind -n M-K select-pane -U  # Move up
bind -n M-L select-pane -R  # Move right

# Navigate windows using Alt + [ and Alt + ]
bind -n M-[ previous-window
bind -n M-] next-window

# resize panes using Alt + o
bind -n M-o resize-pane -Z

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g display-panes-time 4000  # Show numbers for 4 seconds

bind-key C-b set-option -g status

bind w choose-tree -Zw

# use prefix-0 to prefix-9 to select windows, create new window if it doesn't exist
bind 1 if 'tmux select-window -t :1' '' "new-window -t :1 -c '#{pane_current_path}'"
bind 0 if 'tmux select-window -t :0' '' "new-window -t :0 -c '#{pane_current_path}'"
bind 2 if 'tmux select-window -t :2' '' "new-window -t :2 -c '#{pane_current_path}'"
bind 3 if 'tmux select-window -t :3' '' "new-window -t :3 -c '#{pane_current_path}'"
bind 4 if 'tmux select-window -t :4' '' "new-window -t :4 -c '#{pane_current_path}'"
bind 5 if 'tmux select-window -t :5' '' "new-window -t :5 -c '#{pane_current_path}'"
bind 6 if 'tmux select-window -t :6' '' "new-window -t :6 -c '#{pane_current_path}'"
bind 8 if 'tmux select-window -t :8' '' "new-window -t :8 -c '#{pane_current_path}'"
bind 7 if 'tmux select-window -t :7' '' "new-window -t :7 -c '#{pane_current_path}'"
bind 9 if 'tmux select-window -t :9' '' "new-window -t :9 -c '#{pane_current_path}'"

bind -n M-H swap-pane -s '{left-of}'   # Swap with left pane
bind -n M-J swap-pane -s '{down-of}'   # Swap with pane below
bind -n M-K swap-pane -s '{up-of}'     # Swap with pane above
bind -n M-L swap-pane -s '{right-of}'  # Swap with right pane

bind b break-pane -d

bind e choose-tree -Zs

# select last visted window
bind C-p select-window -l

# change pane(s) directory to the current pane directory
bind-key C display-popup -E '~/.config/tmux/scripts/change-pane-dir.sh'

#copy with vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode 'C-v' send -X rectangle-toggle # start selecting rectangle with "C-v"
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard" # copy text with "y"

bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel clipcopy # copy text with "y"
# bind-key ']' run-shell "~/.config/tmux/scripts/paste.sh"
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel clicopy

# use system's clipboard
if-shell 'command -v wl-paste >/dev/null' {
    bind ] run "wl-paste --no-newline | tmux load-buffer - && tmux paste-buffer"
} {
    if-shell 'command -v xclip >/dev/null' {
        bind ] run "xclip -out -selection clipboard | tmux load-buffer - && tmux paste-buffer"
    } {
        display-message "No clipboard utility available for paste"
    }
}

#don't exit copy mode when dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane 

#creates new window with current directory
bind c new-window -c "#{pane_current_path}"

#increase scrollback
set -g history-limit 10000

#Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'omerxx/tmux-sessionx'

BG_COLOR="default"

WINDOW_INACTIVE_BG="#414868"
WINDOW_INACTIVE_FG="#a9b1d6"
WINDOW_ACTIVE_BG="#7aa2f7"
WINDOW_ACTIVE_FG="#1a1b26"

APP_BG="#73daca"
APP_FG="#1a1b26"

SESSION_BG="#e0af68"
SESSION_FG="#1E1E2E"

SESSION_PREFIX_BG="#f7768e"
SESSION_PREFIX_FG="#1a1b26"

WINDOW_LEFT_SEP=""
WINDOW_RIGHT_SEP=""
WINDOW_SEP=""

STATUS_LEFT_SEP=""
STATUS_RIGHT_SEP=""

set -g status on
set -g status-interval 3
set -g status-justify left

set -g status-style "bg=$BG_COLOR,fg=#cdd6f4"
set -g status-left-length 100
set -g status-right-length 100

set -g pane-border-style "fg=#44475a"
set -g pane-active-border-style "fg=#7aa2f7"

set -g message-style "bg=$BG_COLOR,fg=#cdd6f4,bold"
set -g message-command-style "bg=$BG_COLOR,fg=#cdd6f4,bold"

set -g window-status-format "#[fg=$WINDOW_INACTIVE_BG,bg=$BG_COLOR]$WINDOW_LEFT_SEP#[fg=$WINDOW_INACTIVE_FG,bg=$WINDOW_INACTIVE_BG] #I:#(basename #{pane_current_path})#{?window_zoomed_flag, 󰁌,} #[fg=$WINDOW_INACTIVE_BG,bg=$BG_COLOR]$WINDOW_RIGHT_SEP"
set -g window-status-current-format "#[fg=$WINDOW_ACTIVE_BG,bg=$BG_COLOR]$WINDOW_LEFT_SEP#[fg=$WINDOW_ACTIVE_FG,bg=$WINDOW_ACTIVE_BG,bold] #I:#(basename #{pane_current_path})#{?window_zoomed_flag, 󰁌,} #[fg=$WINDOW_ACTIVE_BG,bg=$BG_COLOR]$WINDOW_RIGHT_SEP"

set -g window-status-separator "$WINDOW_SEP"

set -g status-left ""

set -g status-right "\
#[fg=$APP_BG,bg=$BG_COLOR]$STATUS_LEFT_SEP#[fg=$APP_FG,bg=$APP_BG,bold] #{pane_current_command} #[fg=$APP_BG,bg=$BG_COLOR]$STATUS_RIGHT_SEP \
#{?client_prefix,#[fg=$SESSION_PREFIX_BG#,bg=$BG_COLOR]$STATUS_LEFT_SEP#[fg=$SESSION_PREFIX_FG#,bg=$SESSION_PREFIX_BG]#[bold] #S #[fg=$SESSION_PREFIX_BG#,bg=$BG_COLOR]$STATUS_RIGHT_SEP,#[fg=$SESSION_BG#,bg=$BG_COLOR]$STATUS_LEFT_SEP#[fg=$SESSION_FG#,bg=$SESSION_BG]#[bold] #S #[fg=$SESSION_BG#,bg=$BG_COLOR]$STATUS_RIGHT_SEP}"

set -g mode-style "bg=#7aa2f7,fg=$BG_COLOR"

# session x set up
set -g @sessionx-bind 's'
set -g @sessionx-bind-kill-session 'alt-x'

# Resurrect and continuum set up
# Tmux continum doesnt work for some wierd reason unless i do this.
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g status-right 'Continuum status: #{continuum_status}'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-restored 'on'
set -g @continuum-save-interval '5'

run '~/.tmux/plugins/tpm/tpm'
