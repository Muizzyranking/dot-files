# Hack to remove weird string of characters on startup
set -sg escape-time 50

# default-shell 
set-option -g default-shell /bin/zsh

# change prefix to C-Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Set true colors
set-option -sa terminal-features ",xterm*:Tc" 
# set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g focus-events on

set-option -g xterm-keys on
set-window-option -g xterm-keys on

#allows mouse in tmux
set -g mouse on

#move status bar to top
set -g status-position top

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# renumber windiws when a window is removed
set-option -g renumber-windows on

#prefix r to reload tmux config
# NOTE: prefix R reloads instead or prefix r, don't know why
unbind r
bind r source ~/.config/tmux/tmux.conf

# synchronize panes to run same commands
bind S set-window-option synchronize-panes \; display-message "Sync panes toggled."

# Split windows vertically 
bind | split-window -h -c "#{pane_current_path}"

# Split windows horizontally
bind - split-window -v -c "#{pane_current_path}"

# kill pane without confirmation
bind x kill-pane

# kill window without confirmation
bind X kill-window

# kill other window
bind o kill-window -a

# Shift Alt vim keys to switch windows
bind -n M-h previous-window
bind -n M-l next-window

#vim like pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
set -g display-panes-time 4000  # Show numbers for 4 seconds

bind-key C-b set-option -g status

bind w choose-tree -Zw
bind -n MouseDown1StatusRight if -F '#{pane_in_mode}' \
    { send-keys q } \
    { choose-tree -Zw }

# use prefix-0 to prefix-9 to select windows, create new window if it doesn't exist
bind 1 if 'tmux select-window -t :1' '' "new-window -t :1 -c '#{pane_current_path}'"
bind 0 if 'tmux select-window -t :0' '' "new-window -t :0 -c '#{pane_current_path}'"
bind 2 if 'tmux select-window -t :2' '' "new-window -t :2 -c '#{pane_current_path}'"
bind 3 if 'tmux select-window -t :3' '' "new-window -t :3 -c '#{pane_current_path}'"
bind 4 if 'tmux select-window -t :4' '' "new-window -t :4 -c '#{pane_current_path}'"
bind 5 if 'tmux select-window -t :5' '' "new-window -t :5 -c '#{pane_current_path}'"
bind 6 if 'tmux select-window -t :6' '' "new-window -t :6 -c '#{pane_current_path}'"
bind 8 if 'tmux select-window -t :8' '' "new-window -t :8 -c '#{pane_current_path}'"
bind 7 if 'tmux select-window -t :7' '' "new-window -t :7 -c '#{pane_current_path}'"
bind 9 if 'tmux select-window -t :9' '' "new-window -t :9 -c '#{pane_current_path}'"

# select last visted window
bind C-n select-window -l

# change a pane directory to the current pane directory
bind-key C capture-pane \; save-buffer /tmp/tmux_cwd \; delete-buffer \; command-prompt -p "Target pane:" "run-shell 'pane_path=\$(tmux display-message -p -F \"#{pane_current_path}\" -t !); tmux send-keys -t %% \"cd \${pane_path}\" Enter'"

#copy with vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard" # copy text with "y"

# copy to system clipboard
if-shell 'uname | grep -qi mingw' {
    bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "clip.exe"
} {
    if-shell 'command -v xclip >/dev/null' {
        bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
    } {
        if-shell 'command -v wl-copy >/dev/null' {
            bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "wl-copy"
        } {
            display-message "No clipboard utility available"
        }
    }
}

# use system's clipboard
if-shell 'command -v xclip >/dev/null' {
    bind ] run "xclip -out -selection clipboard | tmux load-buffer - && tmux paste-buffer"
} {
    if-shell 'command -v wl-paste >/dev/null' {
        bind ] run "wl-paste --no-newline | tmux load-buffer - && tmux paste-buffer"
    } {
        display-message "No clipboard utility available for paste"
    }
}

#don't exit copy mode when dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane 

#creates new window with current directory
bind c new-window -c "#{pane_current_path}"

#increase scrollback
set -g history-limit 10000

#Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'catppuccin/tmux'
set -g @plugin 'catppuccin/tmux#v0.3.0'
set -g @plugin 'omerxx/tmux-sessionx'

#Catpuccin set up
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_current_text "#{pane_current_path}"
set -g @catppuccin_status_modules_right "application session"
set -g @catppuccin_cpu_color "blue"
set -g @catppuccin_application_icon ""
set -g @catppuccin_status_left_separator  "  █"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_window_current_text "#{b:pane_current_path}#{?window_zoomed_flag, 󰁌 ,}"
set -g @catppuccin_window_default_text "#{b:pane_current_path}#{?window_zoomed_flag, 󰁌 ,}" # use "#W" for application instead of directory
set -g @catppuccin_directory_text "#{b:pane_current_path}"

set -g @catppuccin_status_background "#1a1b26"
set -g @catppuccin_status_text "#7aa2f7"
# set -g @catppuccin_flavor 'mocha'
# set -g @catppuccin_window_status_style "basic"
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_current_fill 'number'
# set -g @catppuccin_window_status 'no'
# set -g @catppuccin_window_text "#{b:pane_current_path}#{?window_zoomed_flag, 󰁌 ,}"
# set -g @catppuccin_window_current_text "#{b:pane_current_path}#{?window_zoomed_flag, 󰁌 ,}"
# set -g status-right "#{E:@catppuccin_status_session}#{E:@catppuccin_status_application}#{E:@catppuccin_status_user}"
# set -g status-left "#{E:@catppuccin_status_windows}"
# set -g @catppuccin_status_left_separator " █"
# set -g @catppuccin_status_right_separator " "
# set -g @catppuccin_status_right_separator_inverse "yes"
# set -g @catppuccin_status_connect_separator "yes"
# set -g @catppuccin_application_icon " "
# set -g @catppuccin_status_background none
# set -g @catppuccin_status_text "#7aa2f7"
# set -g @catppuccin_window_number_color "#{@thm_blue}"
# set -g @catppuccin_window_current_number_color "#{@thm_flamingo}"

# session x set up
set -g @sessionx-bind 's'
# set -g @sessionx-bind-kill-session 'c-x'
set -g @sessionx-bind-kill-session 'alt-x'

# Resurrect and continuum set up
# Tmux continum doesnt work for some wierd reason unless i do this.
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g status-right 'Continuum status: #{continuum_status}'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'

run '~/.tmux/plugins/tpm/tpm'
