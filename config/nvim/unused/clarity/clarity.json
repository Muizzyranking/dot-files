{
  "Define Public Function": {
    "prefix": ["defpub", "public"],
    "body": [
      "(define-public (${1:function-name} ${2:parameters})",
      "\t${0:body}",
      ")"
    ]
  },
  "Define Private Function": {
    "prefix": ["defpriv", "private"],
    "body": [
      "(define-private (${1:function-name} ${2:parameters})",
      "\t${0:body}",
      ")"
    ]
  },
  "Define Read-Only Function": {
    "prefix": ["defread", "readonly"],
    "body": [
      "(define-read-only (${1:function-name} ${2:parameters})",
      "\t${0:body}",
      ")"
    ]
  },
  "Define Map": {
    "prefix": ["defmap", "map"],
    "body": [
      "(define-map ${1:map-name}",
      "\t{${2:key-type}}",
      "\t{${3:value-type}}",
      ")"
    ]
  },
  "Define Data Variable": {
    "prefix": ["defvar", "var"],
    "body": [
      "(define-data-var ${1:var-name} ${2:type} ${3:initial-value})"
    ]
  },
  "Define Constant": {
    "prefix": ["defconst", "const"],
    "body": [
      "(define-constant ${1:const-name} ${2:value})"
    ]
  },
  "Define Trait": {
    "prefix": ["deftrait", "trait"],
    "body": [
      "(define-trait ${1:trait-name} (",
      "\t(${2:function-name} (${3:params}) (response ${4:ok-type} ${5:err-type}))",
      "))"
    ]
  },
  "Implement Trait": {
    "prefix": ["impl", "implement"],
    "body": [
      "(impl-trait '${1:contract-address}.${2:contract-name}.${3:trait-name})"
    ]
  },
  "Let Expression": {
    "prefix": ["let"],
    "body": [
      "(let (",
      "\t(${1:var-name} ${2:value})",
      ")",
      "\t${0:body}",
      ")"
    ]
  },
  "Contract Call": {
    "prefix": ["call", "contract-call"],
    "body": [
      "(contract-call? '${1:contract-address}.${2:contract-name} ${3:function-name} ${0:args})"
    ]
  },
  "Response OK": {
    "prefix": ["ok"],
    "body": ["(ok ${1:value})"]
  },
  "Response Error": {
    "prefix": ["err"],
    "body": ["(err ${1:error-code})"]
  },
  "Assert": {
    "prefix": ["assert"],
    "body": ["(asserts! ${1:condition} ${2:error-code})"]
  },
  "Try": {
    "prefix": ["try"],
    "body": ["(try! ${1:expression})"]
  },
  "Match": {
    "prefix": ["match"],
    "body": [
      "(match ${1:expression}",
      "\tresponse ${2:success-binding} ${3:error-binding}",
      "\t${0:body}",
      ")"
    ]
  }
}

